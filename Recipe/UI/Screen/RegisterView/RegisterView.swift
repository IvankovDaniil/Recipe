//
//  RegisterView.swift
//  Recipe
//
//  Created by –î–∞–Ω–∏–∏–ª –ò–≤–∞–Ω—å–∫–æ–≤ on 29.01.2025.
//
import SwiftUI

struct RegisterView: View {
    @State private var name: String = ""
    @State private var surname: String = ""
    @State private var password: String = ""
    @State private var email: String = ""
    
    let userViewModel = UserViewModel()
    
    let action: () -> Void
    var body: some View {
        NavigationStack{
            ScrollView {
                VStack(spacing: 0) {
                    VStack(spacing: 0) {
                        
                        TextField("–í–≤–µ–¥–∏—Ç–µ –∏–º—è", text: $name)
                            .padding(.top, 15)
                        TextField("–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é", text: $surname)
                            .padding(.top, 15)
                        TextField("–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É", text: $email)
                            .keyboardType(.emailAddress)
                            .border(.clear)
                            .padding(.top, 15)
                        SecureField("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å", text: $password)
                            .padding(.top, 15)
                    }
                    .autocorrectionDisabled()
                    
                    if let errorMessage = userViewModel.errorMessage {
                        Text(errorMessage)
                            .foregroundStyle(.red)
                            .lineLimit(3)
                    }
                    
                    Button {
                        Task {
                            try await userViewModel.registerUser(name, surname, email, password)
                            action()
                        }
                    } label: {
                        Text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
                            .padding(15)
                            .blueRoundedBorder()
                    }
                    .padding(.top, 20)
                    .disabled(userViewModel.isLoad)
                    
                    if userViewModel.isRegistred {
                        Text("Registration successful! üéâ")
                            .foregroundColor(.green)
                    }
                    
                }
                .textFieldStyle(.roundedBorder)
                .multilineTextAlignment(.center)
                .padding(15)
                .toolbar {
                    ToolbarItem(placement: .topBarLeading) {
                        Button {
                            action()
                        } label: {
                            Text("–ó–∞–∫—Ä—ã—Ç—å")
                        }

                    }
                    ToolbarItem(placement: .topBarTrailing) {
                        Button {
                            action()
                        } label: {
                            Text("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
                        }

                    }
                }
                .navigationTitle("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
            }
        }
        
    }
}


#Preview {
    RegisterView(action: {})
}
